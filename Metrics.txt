
[
    {
        "MicroserviceName": "ts-admin-service",
        "Filepath": "./ts-admin-service/src/main/java/com/cloudhubs/trainticket/adminservice/service/AuthUserService.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-admin-service",
        "Filepath": "./ts-admin-service/src/main/java/com/cloudhubs/trainticket/adminservice/service/impl/AuthUserServiceImpl.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-contacts-service",
        "Filepath": "./ts-contacts-service/src/main/java/com/cloudhubs/trainticket/contacts/service/impl/AdminBasicInfoServiceImpl.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-order-service",
        "Filepath": "./ts-order-service/src/main/java/com/cloudhubs/trainticket/order/OrderServiceApplication.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-order-service",
        "Filepath": "./ts-order-service/src/main/java/com/cloudhubs/trainticket/order/service/impl/AdminOrderServiceImpl.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-user-service",
        "Filepath": "./ts-user-service/src/main/java/com/cloudhubs/trainticket/user/TsUserServiceApplication.java",
        "ClassRole": "SERVICE",
        "CallChanges": [
        ]
    },
    {
        "MicroserviceName": "ts-admin-service",
        "Filepath": "./ts-admin-service/src/main/java/com/cloudhubs/trainticket/adminservice/controller/AuthController.java",
        "ClassRole": "CONTROLLER",
        "EndpointChanges": [
            {
                "oldEndpoint": {
                },
                "newEndpoint": {
                    "methodName": "getHello",
                    "parameter": "",
                    "returnType": "String"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                },
                "newEndpoint": {
                    "methodName": "createDefaultUser",
                    "parameter": "[@RequestBody AuthDto authDto]",
                    "returnType": "HttpEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                    "ts-cancel-service -> ts-admin-service",
                    "ts-config-service -> ts-admin-service",
                    "ts-user-service -> ts-admin-service",
                    "ts-order-related-service -> ts-admin-service",
                    "ts-assurance-service -> ts-admin-service",
                    "ts-route-service -> ts-admin-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            }
        ]
    },
    {
        "MicroserviceName": "ts-contacts-service",
        "Filepath": "./ts-contacts-service/src/main/java/com/cloudhubs/trainticket/contacts/controller/ContactsController.java",
        "ClassRole": "CONTROLLER",
        "EndpointChanges": [
            {
                "oldEndpoint": {
                    "methodName": "home",
                    "parameter": "",
                    "returnType": "String"
                },
                "newEndpoint": {
                    "methodName": "home",
                    "parameter": "",
                    "returnType": "String"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getAllContacts",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "getAllContacts",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "newLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "createNewContacts",
                    "parameter": "[@RequestBody Contacts aci, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "createNewContacts",
                    "parameter": "[@RequestBody Contacts aci]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "newLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "createNewContactsAdmin",
                    "parameter": "[@RequestBody Contacts aci, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity<?>"
                },
                "newEndpoint": {
                    "methodName": "createNewContactsAdmin",
                    "parameter": "[@RequestBody Contacts aci, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity<?>"
                },
                "oldLinks": [
                    "ts-station-service -> ts-contacts-service"
                ],
                "newLinks": [
                    "ts-station-service -> ts-contacts-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "deleteContacts",
                    "parameter": "[@PathVariable String contactsId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "deleteContacts",
                    "parameter": "[@PathVariable String contactsId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "modifyContacts",
                    "parameter": "[@RequestBody Contacts info, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "modifyContacts",
                    "parameter": "[@RequestBody Contacts info]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "newLinks": [
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-preserve-service -> ts-contacts-service",
                    "ts-user-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-order-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service",
                    "ts-station-service -> ts-contacts-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "findContactsByAccountId",
                    "parameter": "[@PathVariable String accountId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "findContactsByAccountId",
                    "parameter": "[@PathVariable String accountId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getContactsByContactsId",
                    "parameter": "[@PathVariable String id, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "getContactsByContactsId",
                    "parameter": "[@PathVariable String id, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            }
        ]
    },
    {
        "MicroserviceName": "ts-preserve-service",
        "Filepath": "./ts-preserve-service/src/main/java/com/cloudhubs/trainticket/preserve/controller/OrderController.java",
        "ClassRole": "CONTROLLER",
        "EndpointChanges": [
            {
                "oldEndpoint": {
                    "methodName": "home",
                    "parameter": "",
                    "returnType": "String"
                },
                "newEndpoint": {
                    "methodName": "home",
                    "parameter": "",
                    "returnType": "String"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getTicketListByDateAndTripId",
                    "parameter": "[@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "getTicketListByDateAndTripId",
                    "parameter": "[@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-travel-service -> ts-preserve-service",
                    "ts-travel-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-station-service -> ts-preserve-service",
                    "ts-station-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-travel-service -> ts-preserve-service",
                    "ts-travel-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-station-service -> ts-preserve-service",
                    "ts-station-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "createNewOrder",
                    "parameter": "[@RequestBody Order createOrder, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "createNewOrder",
                    "parameter": "[@RequestBody Order createOrder, HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "addcreateNewOrder",
                    "parameter": "[@RequestBody Order order, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "addcreateNewOrder",
                    "parameter": "[@RequestBody Order order]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "queryOrders",
                    "parameter": "[@RequestBody OrderInfo qi, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "queryOrders",
                    "parameter": "[@RequestBody OrderInfo qi, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "queryOrdersForRefresh",
                    "parameter": "[@RequestBody OrderInfo qi, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "queryOrdersForRefresh",
                    "parameter": "[@RequestBody OrderInfo qi, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "calculateSoldTicket",
                    "parameter": "[@PathVariable String travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "calculateSoldTicket",
                    "parameter": "[@PathVariable String travelDate, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getOrderPrice",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "getOrderPrice",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "payOrder",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "payOrder",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getOrderById",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "getOrderById",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "modifyOrder",
                    "parameter": "[@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "modifyOrder",
                    "parameter": "[@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "securityInfoCheck",
                    "parameter": "[@PathVariable String checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "securityInfoCheck",
                    "parameter": "[@PathVariable String checkDate, @PathVariable String accountId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "saveOrderInfo",
                    "parameter": "[@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "saveOrderInfo",
                    "parameter": "[@RequestBody Order orderInfo, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "updateOrder",
                    "parameter": "[@RequestBody Order order, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "updateOrder",
                    "parameter": "[@RequestBody Order order, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "deleteOrder",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "deleteOrder",
                    "parameter": "[@PathVariable String orderId, @RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "findAllOrder",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "newEndpoint": {
                    "methodName": "findAllOrder",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "HttpEntity"
                },
                "oldLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "newLinks": [
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-cancel-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-user-service -> ts-preserve-service",
                    "ts-consign-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-order-service -> ts-preserve-service",
                    "ts-route-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service",
                    "ts-admin-service -> ts-preserve-service"
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            }
        ]
    },
    {
        "MicroserviceName": "ts-user-service",
        "Filepath": "./ts-user-service/src/main/java/com/cloudhubs/trainticket/user/controller/UserController.java",
        "ClassRole": "CONTROLLER",
        "EndpointChanges": [
            {
                "oldEndpoint": {
                    "methodName": "testHello",
                    "parameter": "",
                    "returnType": "String"
                },
                "newEndpoint": {
                    "methodName": "testHello",
                    "parameter": "",
                    "returnType": "String"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getAllUser",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "getAllUser",
                    "parameter": "[@RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getUserByUserName",
                    "parameter": "[@PathVariable String userName, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "getUserByUserName",
                    "parameter": "[@PathVariable String userName, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "getUserByUserId",
                    "parameter": "[@PathVariable String userId, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "getUserByUserId",
                    "parameter": "[@PathVariable String userId, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "registerUser",
                    "parameter": "[@RequestBody UserDto userDto, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "registerUser",
                    "parameter": "[@RequestBody UserDto userDto]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "deleteUserById",
                    "parameter": "[@PathVariable String userId, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "deleteUserById",
                    "parameter": "[@PathVariable String userId, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            },
            {
                "oldEndpoint": {
                    "methodName": "updateUser",
                    "parameter": "[@RequestBody UserDto user, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "newEndpoint": {
                    "methodName": "updateUser",
                    "parameter": "[@RequestBody UserDto user, @RequestHeader HttpHeaders headers]",
                    "returnType": "ResponseEntity<Response>"
                },
                "oldLinks": [
                ],
                "newLinks": [
                ],
                "action": "A Endpoint was Modified!",
                "impact": ""
            }
        ]
    }
]